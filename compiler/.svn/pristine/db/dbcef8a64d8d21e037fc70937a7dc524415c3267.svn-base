// Generated from CTX.g4 by ANTLR 4.0

package bigproject.syntactic;
import bigproject.ast.*;
import bigproject.symbol.*;
import static bigproject.symbol.Symbol.symbol;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CTXLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__58=1, T__57=2, T__56=3, T__55=4, T__54=5, T__53=6, T__52=7, T__51=8, 
		T__50=9, T__49=10, T__48=11, T__47=12, T__46=13, T__45=14, T__44=15, T__43=16, 
		T__42=17, T__41=18, T__40=19, T__39=20, T__38=21, T__37=22, T__36=23, 
		T__35=24, T__34=25, T__33=26, T__32=27, T__31=28, T__30=29, T__29=30, 
		T__28=31, T__27=32, T__26=33, T__25=34, T__24=35, T__23=36, T__22=37, 
		T__21=38, T__20=39, T__19=40, T__18=41, T__17=42, T__16=43, T__15=44, 
		T__14=45, T__13=46, T__12=47, T__11=48, T__10=49, T__9=50, T__8=51, T__7=52, 
		T__6=53, T__5=54, T__4=55, T__3=56, T__2=57, T__1=58, T__0=59, INTEGER=60, 
		CHAR=61, DECINTEGER=62, HEXINTEGER=63, OCTINTEGER=64, STRING=65, IDENTIFIER=66, 
		WS=67, COMMENTS=68, LINE_COMMENT=69, INCLUDE_COMMENT=70;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'&'", "'['", "'*'", "'<'", "'--'", "'continue'", "'!='", "'<='", "'<<'", 
		"'}'", "'char'", "'%'", "'->'", "'*='", "'union'", "')'", "'='", "'|='", 
		"'|'", "'!'", "'sizeof'", "'<<='", "']'", "'-='", "','", "'while'", "'-'", 
		"'('", "'&='", "'if'", "'int'", "'void'", "'>>='", "'{'", "'...'", "'break'", 
		"'+='", "'^='", "'else'", "'struct'", "'++'", "'>>'", "'^'", "'.'", "'+'", 
		"'for'", "'typedef'", "'return'", "';'", "'&&'", "'||'", "'>'", "'%='", 
		"'/='", "'=='", "'/'", "'~'", "'>='", "'sizeof '", "INTEGER", "CHAR", 
		"DECINTEGER", "HEXINTEGER", "OCTINTEGER", "STRING", "IDENTIFIER", "WS", 
		"COMMENTS", "LINE_COMMENT", "INCLUDE_COMMENT"
	};
	public static final String[] ruleNames = {
		"T__58", "T__57", "T__56", "T__55", "T__54", "T__53", "T__52", "T__51", 
		"T__50", "T__49", "T__48", "T__47", "T__46", "T__45", "T__44", "T__43", 
		"T__42", "T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", 
		"T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", 
		"T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", 
		"T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", 
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "INTEGER", "CHAR", "DECINTEGER", "HEXINTEGER", "OCTINTEGER", 
		"STRING", "IDENTIFIER", "WS", "COMMENTS", "LINE_COMMENT", "INCLUDE_COMMENT"
	};


	public CTXLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CTX.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 66: WS_action((RuleContext)_localctx, actionIndex); break;

		case 67: COMMENTS_action((RuleContext)_localctx, actionIndex); break;

		case 68: LINE_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 69: INCLUDE_COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void INCLUDE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void COMMENTS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void LINE_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4H\u01d0\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\t"+
		"E\4F\tF\4G\tG\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13"+
		"\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3"+
		"\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\25\3"+
		"\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3"+
		"\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3"+
		"\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3"+
		"\"\3\"\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3("+
		"\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/"+
		"\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66"+
		"\3\66\3\66\3\67\3\67\3\67\38\38\38\39\39\3:\3:\3;\3;\3;\3<\3<\3<\3<\3"+
		"<\3<\3<\3<\3=\3=\3=\5=\u015e\n=\3>\3>\3>\3>\5>\u0164\n>\3>\3>\3?\3?\3"+
		"?\7?\u016b\n?\f?\16?\u016e\13?\5?\u0170\n?\3@\3@\3@\7@\u0175\n@\f@\16"+
		"@\u0178\13@\3A\3A\6A\u017c\nA\rA\16A\u017d\3B\3B\3B\3B\7B\u0184\nB\fB"+
		"\16B\u0187\13B\3B\3B\3C\3C\7C\u018d\nC\fC\16C\u0190\13C\3D\6D\u0193\n"+
		"D\rD\16D\u0194\3D\3D\3E\3E\3E\3E\7E\u019d\nE\fE\16E\u01a0\13E\3E\3E\3"+
		"E\3E\3E\3F\3F\3F\3F\7F\u01ab\nF\fF\16F\u01ae\13F\3F\5F\u01b1\nF\3F\3F"+
		"\5F\u01b5\nF\3F\3F\3G\3G\3G\3G\3G\3G\3G\3G\3G\3G\7G\u01c3\nG\fG\16G\u01c6"+
		"\13G\3G\5G\u01c9\nG\3G\3G\5G\u01cd\nG\3G\3G\3\u019eH\3\3\1\5\4\1\7\5\1"+
		"\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17"+
		"\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61"+
		"\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1"+
		"K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\65"+
		"\1i\66\1k\67\1m8\1o9\1q:\1s;\1u<\1w=\1y>\1{?\1}@\1\177A\1\u0081B\1\u0083"+
		"C\1\u0085D\1\u0087E\2\u0089F\3\u008bG\4\u008dH\5\3\2\20\b$$))^^ppttvv"+
		"\4))^^\3\63;\3\62;\4ZZzz\5\62;CHch\3\629\b$$))^^ppttvv\4$$^^\5C\\aac|"+
		"\6\62;C\\aac|\5\13\f\17\17\"\"\4\f\f\17\17\4\f\f\17\17\u01e1\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3"+
		"\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2"+
		"\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2"+
		"}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2"+
		"\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\3\u008f"+
		"\3\2\2\2\5\u0091\3\2\2\2\7\u0093\3\2\2\2\t\u0095\3\2\2\2\13\u0097\3\2"+
		"\2\2\r\u009a\3\2\2\2\17\u00a3\3\2\2\2\21\u00a6\3\2\2\2\23\u00a9\3\2\2"+
		"\2\25\u00ac\3\2\2\2\27\u00ae\3\2\2\2\31\u00b3\3\2\2\2\33\u00b5\3\2\2\2"+
		"\35\u00b8\3\2\2\2\37\u00bb\3\2\2\2!\u00c1\3\2\2\2#\u00c3\3\2\2\2%\u00c5"+
		"\3\2\2\2\'\u00c8\3\2\2\2)\u00ca\3\2\2\2+\u00cc\3\2\2\2-\u00d3\3\2\2\2"+
		"/\u00d7\3\2\2\2\61\u00d9\3\2\2\2\63\u00dc\3\2\2\2\65\u00de\3\2\2\2\67"+
		"\u00e4\3\2\2\29\u00e6\3\2\2\2;\u00e8\3\2\2\2=\u00eb\3\2\2\2?\u00ee\3\2"+
		"\2\2A\u00f2\3\2\2\2C\u00f7\3\2\2\2E\u00fb\3\2\2\2G\u00fd\3\2\2\2I\u0101"+
		"\3\2\2\2K\u0107\3\2\2\2M\u010a\3\2\2\2O\u010d\3\2\2\2Q\u0112\3\2\2\2S"+
		"\u0119\3\2\2\2U\u011c\3\2\2\2W\u011f\3\2\2\2Y\u0121\3\2\2\2[\u0123\3\2"+
		"\2\2]\u0125\3\2\2\2_\u0129\3\2\2\2a\u0131\3\2\2\2c\u0138\3\2\2\2e\u013a"+
		"\3\2\2\2g\u013d\3\2\2\2i\u0140\3\2\2\2k\u0142\3\2\2\2m\u0145\3\2\2\2o"+
		"\u0148\3\2\2\2q\u014b\3\2\2\2s\u014d\3\2\2\2u\u014f\3\2\2\2w\u0152\3\2"+
		"\2\2y\u015d\3\2\2\2{\u015f\3\2\2\2}\u016f\3\2\2\2\177\u0171\3\2\2\2\u0081"+
		"\u0179\3\2\2\2\u0083\u017f\3\2\2\2\u0085\u018a\3\2\2\2\u0087\u0192\3\2"+
		"\2\2\u0089\u0198\3\2\2\2\u008b\u01a6\3\2\2\2\u008d\u01b8\3\2\2\2\u008f"+
		"\u0090\7(\2\2\u0090\4\3\2\2\2\u0091\u0092\7]\2\2\u0092\6\3\2\2\2\u0093"+
		"\u0094\7,\2\2\u0094\b\3\2\2\2\u0095\u0096\7>\2\2\u0096\n\3\2\2\2\u0097"+
		"\u0098\7/\2\2\u0098\u0099\7/\2\2\u0099\f\3\2\2\2\u009a\u009b\7e\2\2\u009b"+
		"\u009c\7q\2\2\u009c\u009d\7p\2\2\u009d\u009e\7v\2\2\u009e\u009f\7k\2\2"+
		"\u009f\u00a0\7p\2\2\u00a0\u00a1\7w\2\2\u00a1\u00a2\7g\2\2\u00a2\16\3\2"+
		"\2\2\u00a3\u00a4\7#\2\2\u00a4\u00a5\7?\2\2\u00a5\20\3\2\2\2\u00a6\u00a7"+
		"\7>\2\2\u00a7\u00a8\7?\2\2\u00a8\22\3\2\2\2\u00a9\u00aa\7>\2\2\u00aa\u00ab"+
		"\7>\2\2\u00ab\24\3\2\2\2\u00ac\u00ad\7\177\2\2\u00ad\26\3\2\2\2\u00ae"+
		"\u00af\7e\2\2\u00af\u00b0\7j\2\2\u00b0\u00b1\7c\2\2\u00b1\u00b2\7t\2\2"+
		"\u00b2\30\3\2\2\2\u00b3\u00b4\7\'\2\2\u00b4\32\3\2\2\2\u00b5\u00b6\7/"+
		"\2\2\u00b6\u00b7\7@\2\2\u00b7\34\3\2\2\2\u00b8\u00b9\7,\2\2\u00b9\u00ba"+
		"\7?\2\2\u00ba\36\3\2\2\2\u00bb\u00bc\7w\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be"+
		"\7k\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7p\2\2\u00c0 \3\2\2\2\u00c1\u00c2"+
		"\7+\2\2\u00c2\"\3\2\2\2\u00c3\u00c4\7?\2\2\u00c4$\3\2\2\2\u00c5\u00c6"+
		"\7~\2\2\u00c6\u00c7\7?\2\2\u00c7&\3\2\2\2\u00c8\u00c9\7~\2\2\u00c9(\3"+
		"\2\2\2\u00ca\u00cb\7#\2\2\u00cb*\3\2\2\2\u00cc\u00cd\7u\2\2\u00cd\u00ce"+
		"\7k\2\2\u00ce\u00cf\7|\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7q\2\2\u00d1"+
		"\u00d2\7h\2\2\u00d2,\3\2\2\2\u00d3\u00d4\7>\2\2\u00d4\u00d5\7>\2\2\u00d5"+
		"\u00d6\7?\2\2\u00d6.\3\2\2\2\u00d7\u00d8\7_\2\2\u00d8\60\3\2\2\2\u00d9"+
		"\u00da\7/\2\2\u00da\u00db\7?\2\2\u00db\62\3\2\2\2\u00dc\u00dd\7.\2\2\u00dd"+
		"\64\3\2\2\2\u00de\u00df\7y\2\2\u00df\u00e0\7j\2\2\u00e0\u00e1\7k\2\2\u00e1"+
		"\u00e2\7n\2\2\u00e2\u00e3\7g\2\2\u00e3\66\3\2\2\2\u00e4\u00e5\7/\2\2\u00e5"+
		"8\3\2\2\2\u00e6\u00e7\7*\2\2\u00e7:\3\2\2\2\u00e8\u00e9\7(\2\2\u00e9\u00ea"+
		"\7?\2\2\u00ea<\3\2\2\2\u00eb\u00ec\7k\2\2\u00ec\u00ed\7h\2\2\u00ed>\3"+
		"\2\2\2\u00ee\u00ef\7k\2\2\u00ef\u00f0\7p\2\2\u00f0\u00f1\7v\2\2\u00f1"+
		"@\3\2\2\2\u00f2\u00f3\7x\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5\7k\2\2\u00f5"+
		"\u00f6\7f\2\2\u00f6B\3\2\2\2\u00f7\u00f8\7@\2\2\u00f8\u00f9\7@\2\2\u00f9"+
		"\u00fa\7?\2\2\u00faD\3\2\2\2\u00fb\u00fc\7}\2\2\u00fcF\3\2\2\2\u00fd\u00fe"+
		"\7\60\2\2\u00fe\u00ff\7\60\2\2\u00ff\u0100\7\60\2\2\u0100H\3\2\2\2\u0101"+
		"\u0102\7d\2\2\u0102\u0103\7t\2\2\u0103\u0104\7g\2\2\u0104\u0105\7c\2\2"+
		"\u0105\u0106\7m\2\2\u0106J\3\2\2\2\u0107\u0108\7-\2\2\u0108\u0109\7?\2"+
		"\2\u0109L\3\2\2\2\u010a\u010b\7`\2\2\u010b\u010c\7?\2\2\u010cN\3\2\2\2"+
		"\u010d\u010e\7g\2\2\u010e\u010f\7n\2\2\u010f\u0110\7u\2\2\u0110\u0111"+
		"\7g\2\2\u0111P\3\2\2\2\u0112\u0113\7u\2\2\u0113\u0114\7v\2\2\u0114\u0115"+
		"\7t\2\2\u0115\u0116\7w\2\2\u0116\u0117\7e\2\2\u0117\u0118\7v\2\2\u0118"+
		"R\3\2\2\2\u0119\u011a\7-\2\2\u011a\u011b\7-\2\2\u011bT\3\2\2\2\u011c\u011d"+
		"\7@\2\2\u011d\u011e\7@\2\2\u011eV\3\2\2\2\u011f\u0120\7`\2\2\u0120X\3"+
		"\2\2\2\u0121\u0122\7\60\2\2\u0122Z\3\2\2\2\u0123\u0124\7-\2\2\u0124\\"+
		"\3\2\2\2\u0125\u0126\7h\2\2\u0126\u0127\7q\2\2\u0127\u0128\7t\2\2\u0128"+
		"^\3\2\2\2\u0129\u012a\7v\2\2\u012a\u012b\7{\2\2\u012b\u012c\7r\2\2\u012c"+
		"\u012d\7g\2\2\u012d\u012e\7f\2\2\u012e\u012f\7g\2\2\u012f\u0130\7h\2\2"+
		"\u0130`\3\2\2\2\u0131\u0132\7t\2\2\u0132\u0133\7g\2\2\u0133\u0134\7v\2"+
		"\2\u0134\u0135\7w\2\2\u0135\u0136\7t\2\2\u0136\u0137\7p\2\2\u0137b\3\2"+
		"\2\2\u0138\u0139\7=\2\2\u0139d\3\2\2\2\u013a\u013b\7(\2\2\u013b\u013c"+
		"\7(\2\2\u013cf\3\2\2\2\u013d\u013e\7~\2\2\u013e\u013f\7~\2\2\u013fh\3"+
		"\2\2\2\u0140\u0141\7@\2\2\u0141j\3\2\2\2\u0142\u0143\7\'\2\2\u0143\u0144"+
		"\7?\2\2\u0144l\3\2\2\2\u0145\u0146\7\61\2\2\u0146\u0147\7?\2\2\u0147n"+
		"\3\2\2\2\u0148\u0149\7?\2\2\u0149\u014a\7?\2\2\u014ap\3\2\2\2\u014b\u014c"+
		"\7\61\2\2\u014cr\3\2\2\2\u014d\u014e\7\u0080\2\2\u014et\3\2\2\2\u014f"+
		"\u0150\7@\2\2\u0150\u0151\7?\2\2\u0151v\3\2\2\2\u0152\u0153\7u\2\2\u0153"+
		"\u0154\7k\2\2\u0154\u0155\7|\2\2\u0155\u0156\7g\2\2\u0156\u0157\7q\2\2"+
		"\u0157\u0158\7h\2\2\u0158\u0159\7\"\2\2\u0159x\3\2\2\2\u015a\u015e\5}"+
		"?\2\u015b\u015e\5\177@\2\u015c\u015e\5\u0081A\2\u015d\u015a\3\2\2\2\u015d"+
		"\u015b\3\2\2\2\u015d\u015c\3\2\2\2\u015ez\3\2\2\2\u015f\u0163\7)\2\2\u0160"+
		"\u0161\7^\2\2\u0161\u0164\t\2\2\2\u0162\u0164\n\3\2\2\u0163\u0160\3\2"+
		"\2\2\u0163\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0166\7)\2\2\u0166"+
		"|\3\2\2\2\u0167\u0170\7\62\2\2\u0168\u016c\t\4\2\2\u0169\u016b\t\5\2\2"+
		"\u016a\u0169\3\2\2\2\u016b\u016e\3\2\2\2\u016c\u016a\3\2\2\2\u016c\u016d"+
		"\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016c\3\2\2\2\u016f\u0167\3\2\2\2\u016f"+
		"\u0168\3\2\2\2\u0170~\3\2\2\2\u0171\u0172\7\62\2\2\u0172\u0176\t\6\2\2"+
		"\u0173\u0175\t\7\2\2\u0174\u0173\3\2\2\2\u0175\u0178\3\2\2\2\u0176\u0174"+
		"\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0080\3\2\2\2\u0178\u0176\3\2\2\2\u0179"+
		"\u017b\7\62\2\2\u017a\u017c\t\b\2\2\u017b\u017a\3\2\2\2\u017c\u017d\3"+
		"\2\2\2\u017d\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0082\3\2\2\2\u017f"+
		"\u0185\7$\2\2\u0180\u0181\7^\2\2\u0181\u0184\t\t\2\2\u0182\u0184\n\n\2"+
		"\2\u0183\u0180\3\2\2\2\u0183\u0182\3\2\2\2\u0184\u0187\3\2\2\2\u0185\u0183"+
		"\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0188\3\2\2\2\u0187\u0185\3\2\2\2\u0188"+
		"\u0189\7$\2\2\u0189\u0084\3\2\2\2\u018a\u018e\t\13\2\2\u018b\u018d\t\f"+
		"\2\2\u018c\u018b\3\2\2\2\u018d\u0190\3\2\2\2\u018e\u018c\3\2\2\2\u018e"+
		"\u018f\3\2\2\2\u018f\u0086\3\2\2\2\u0190\u018e\3\2\2\2\u0191\u0193\t\r"+
		"\2\2\u0192\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194\u0192\3\2\2\2\u0194"+
		"\u0195\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0197\bD\2\2\u0197\u0088\3\2"+
		"\2\2\u0198\u0199\7\61\2\2\u0199\u019a\7,\2\2\u019a\u019e\3\2\2\2\u019b"+
		"\u019d\13\2\2\2\u019c\u019b\3\2\2\2\u019d\u01a0\3\2\2\2\u019e\u019f\3"+
		"\2\2\2\u019e\u019c\3\2\2\2\u019f\u01a1\3\2\2\2\u01a0\u019e\3\2\2\2\u01a1"+
		"\u01a2\7,\2\2\u01a2\u01a3\7\61\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a5\bE"+
		"\3\2\u01a5\u008a\3\2\2\2\u01a6\u01a7\7\61\2\2\u01a7\u01a8\7\61\2\2\u01a8"+
		"\u01ac\3\2\2\2\u01a9\u01ab\n\16\2\2\u01aa\u01a9\3\2\2\2\u01ab\u01ae\3"+
		"\2\2\2\u01ac\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01b4\3\2\2\2\u01ae"+
		"\u01ac\3\2\2\2\u01af\u01b1\7\17\2\2\u01b0\u01af\3\2\2\2\u01b0\u01b1\3"+
		"\2\2\2\u01b1\u01b2\3\2\2\2\u01b2\u01b5\7\f\2\2\u01b3\u01b5\7\1\2\2\u01b4"+
		"\u01b0\3\2\2\2\u01b4\u01b3\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6\u01b7\bF"+
		"\4\2\u01b7\u008c\3\2\2\2\u01b8\u01b9\7%\2\2\u01b9\u01ba\7k\2\2\u01ba\u01bb"+
		"\7p\2\2\u01bb\u01bc\7e\2\2\u01bc\u01bd\7n\2\2\u01bd\u01be\7w\2\2\u01be"+
		"\u01bf\7f\2\2\u01bf\u01c0\7g\2\2\u01c0\u01c4\3\2\2\2\u01c1\u01c3\n\17"+
		"\2\2\u01c2\u01c1\3\2\2\2\u01c3\u01c6\3\2\2\2\u01c4\u01c2\3\2\2\2\u01c4"+
		"\u01c5\3\2\2\2\u01c5\u01cc\3\2\2\2\u01c6\u01c4\3\2\2\2\u01c7\u01c9\7\17"+
		"\2\2\u01c8\u01c7\3\2\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01ca\3\2\2\2\u01ca"+
		"\u01cd\7\f\2\2\u01cb\u01cd\7\1\2\2\u01cc\u01c8\3\2\2\2\u01cc\u01cb\3\2"+
		"\2\2\u01cd\u01ce\3\2\2\2\u01ce\u01cf\bG\5\2\u01cf\u008e\3\2\2\2\24\2\u015d"+
		"\u0163\u016c\u016f\u0176\u017d\u0183\u0185\u018e\u0194\u019e\u01ac\u01b0"+
		"\u01b4\u01c4\u01c8\u01cc";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}