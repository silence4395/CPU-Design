package bigproject.opt;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import bigproject.interm.*;
import bigproject.translate.CompUnit;
import bigproject.translate.Temp;

public class DeadCodeElimination {

	public void work(CompUnit unit) {
		List<Interm> result = new ArrayList<Interm>();
		for (Interm interm: unit.interms) {
			if ((interm instanceof AssignAddress) ||
				(interm instanceof BinOp) ||
				(interm instanceof BinOpI) || 
				(interm instanceof Load) || 
				(interm instanceof Move) || 
				(interm instanceof MoveI) || 
				(interm instanceof MoveL)) {
				Set<Temp> set = new HashSet<Temp>(interm.def());
				Boolean flag = false;
				for (Temp temp: set)
					if (temp.level.depth == 0)
						flag = true;
				if (flag) {
					result.add(interm);
					continue;
				}
				set.retainAll(interm.OUT);
				if (set.size() != 0)
					result.add(interm);
			} else
				result.add(interm);
		}
		unit.interms = result;
	}
}
