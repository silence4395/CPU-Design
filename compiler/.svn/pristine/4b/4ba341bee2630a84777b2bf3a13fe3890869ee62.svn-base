	.data
	.align 2
L39:
	.asciiz "%d \n"
	.align 2
	.text
	.align 2
	.globl main
main:
	li $k0, 440
	sw $k0, 0($gp)
	lw $k0, 0($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 0($gp)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 0($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 4($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 8($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 12($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 16($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 20($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 24($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 28($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 32($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 36($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 40($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 44($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 48($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 52($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 56($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 60($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 64($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 68($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 72($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 76($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 80($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 84($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 88($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 92($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 96($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 100($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 104($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 108($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 112($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 116($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 120($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 124($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 128($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 132($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 136($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 140($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 144($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 148($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 152($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 156($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 160($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 164($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 168($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 172($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 176($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 180($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 184($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 188($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 192($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 196($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 200($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 204($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 208($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 212($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 216($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 220($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 224($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 228($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 232($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 236($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 240($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 244($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 248($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 252($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 256($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 260($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 264($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 268($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 272($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 276($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 280($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 284($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 288($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 292($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 296($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 300($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 304($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 308($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 312($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 316($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 320($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 324($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 328($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 332($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 336($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 340($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 344($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 348($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 352($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 356($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 360($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 364($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 368($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 372($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 376($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 380($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 384($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 388($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 392($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 396($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 400($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 404($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 408($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 412($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 416($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 420($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 424($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 428($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 432($k1)
	li $k0, 440
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 4($gp)
	lw $k0, 4($gp)
	lw $k1, 0($gp)
	sw $k0, 436($k1)
	li $k0, 440
	sw $k0, 12($gp)
	lw $k0, 12($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 12($gp)
	li $k0, 440
	sw $k0, 16($gp)
	lw $k0, 16($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 16($gp)
	li $k0, 440
	sw $k0, 20($gp)
	lw $k0, 20($gp)
	move $a0, $k0
	li $v0, 9
	syscall
	move $k0, $v0
	sw $k0, 20($gp)
	jal cmain
	li $v0, 10
	syscall
L7_build:
	sw $ra, -4($sp)
	addiu $sp, $sp, -184
	sw $t0, 108($sp)
	sw $t1, 112($sp)
	sw $t2, 116($sp)
	sw $t3, 120($sp)
	sw $t4, 124($sp)
	sw $t5, 128($sp)
	sw $t6, 132($sp)
	sw $t7, 136($sp)
	move $t2, $a0
	move $t1, $a1
	lw $t4, 28($gp)
	lw $t0, 0($gp)
	lw $t3, 24($gp)
	li $t3, 1
L9:
	bgt $t3, 49, L10
	li $t4, 50
L11:
	li $t5, 98
	sub $t6, $t5, $t3
	addi $t6, $t6, 1
	bgt $t4, $t6, L12
	move $t5, $t0
	mul $t6, $t3, 4
	add $t7, $t5, $t6
	lw $t5, 0($t7)
	mul $t6, $t4, 4
	add $t5, $t5, $t6
	li $t6, 1
	sw $t6, 0($t5)
	move $t5, $t4
	addi $t4, $t4, 1
	j L11
L12:
	move $t5, $t3
	addi $t3, $t3, 1
	j L9
L10:
	li $t3, 1
L13:
	bgt $t3, 49, L14
	move $t5, $t0
	mul $t6, $t2, 4
	add $t7, $t5, $t6
	lw $t5, 0($t7)
	mul $t6, $t3, 4
	add $t5, $t5, $t6
	li $t6, 1
	sw $t6, 0($t5)
	move $t5, $t3
	addi $t3, $t3, 1
	j L13
L14:
	li $t3, 50
L15:
	bgt $t3, 98, L16
	move $t2, $t0
	mul $t5, $t3, 4
	add $t6, $t2, $t5
	lw $t2, 0($t6)
	mul $t5, $t1, 4
	add $t2, $t2, $t5
	li $t5, 1
	sw $t5, 0($t2)
	move $t2, $t3
	addi $t3, $t3, 1
	j L15
L16:
	li $v0, 0
	j L8
	sw $t3, 24($gp)
	sw $t4, 28($gp)
	sw $t4, 28($gp)
	sw $t3, 24($gp)
	sw $t3, 24($gp)
	sw $t3, 24($gp)
	sw $t3, 24($gp)
	sw $t3, 24($gp)
L8:
	lw $t0, 108($sp)
	lw $t1, 112($sp)
	lw $t2, 116($sp)
	lw $t3, 120($sp)
	lw $t4, 124($sp)
	lw $t5, 128($sp)
	lw $t6, 132($sp)
	lw $t7, 136($sp)
	addiu $sp, $sp, 184
	lw $ra, -4($sp)
	jr $ra
L17_find:
	sw $ra, -4($sp)
	addiu $sp, $sp, -256
	sw $t0, 180($sp)
	sw $t1, 184($sp)
	sw $t2, 188($sp)
	sw $t3, 192($sp)
	sw $t4, 196($sp)
	sw $t5, 200($sp)
	sw $t6, 204($sp)
	sw $t7, 208($sp)
	sw $s0, 212($sp)
	sw $s1, 216($sp)
	sw $s2, 220($sp)
	sw $s3, 224($sp)
	sw $s4, 228($sp)
	move $t4, $a0
	move $t6, $a1
	move $t5, $a2
	lw $s2, 28($gp)
	lw $s1, 36($gp)
	lw $t1, 16($gp)
	lw $t7, 32($gp)
	lw $t2, 12($gp)
	lw $t0, 20($gp)
	lw $t3, 0($gp)
	lw $s0, 24($gp)
	li $t7, 0
	li $s1, 1
	li $s0, 1
L19:
	bgt $s0, $t4, L20
	move $s3, $t2
	mul $s4, $s0, 4
	add $s3, $s3, $s4
	li $s4, 0
	sw $s4, 0($s3)
	move $s3, $s0
	addi $s0, $s0, 1
	j L19
L20:
	move $s3, $t0
	li $s4, 4
	add $s3, $s3, $s4
	sw $t6, 0($s3)
	move $s3, $t2
	mul $s4, $t6, 4
	add $s3, $s3, $s4
	li $s4, 1
	sw $s4, 0($s3)
	move $s3, $t1
	mul $s4, $t6, 4
	add $s3, $s3, $s4
	li $t6, 0
	sw $t6, 0($s3)
	li $t5, 0
L21:
	slt $t6, $t7, $s1
	blez $t6, L24
	seq $t6, $t5, 0
	sgt $s3, $t6, 0
	j L23
L24:
	li $s3, 0
L23:
	beqz $s3, L22
	move $t6, $t7
	addi $t7, $t7, 1
	move $t6, $t0
	mul $s3, $t7, 4
	add $s4, $t6, $s3
	lw $t6, 0($s4)
	move $s0, $t6
	li $s2, 1
L25:
	bgt $s2, $t4, L26
	move $t6, $t3
	mul $s3, $s0, 4
	add $s4, $t6, $s3
	lw $t6, 0($s4)
	mul $s3, $s2, 4
	add $s4, $t6, $s3
	lw $t6, 0($s4)
	sgt $s3, $t6, 0
	blez $s3, L29
	move $t6, $t2
	mul $s3, $s2, 4
	add $s4, $t6, $s3
	lw $t6, 0($s4)
	seq $s3, $t6, 0
	sgt $t6, $s3, 0
	j L28
L29:
	li $t6, 0
L28:
	beqz $t6, L30
	move $t6, $t2
	mul $s3, $s2, 4
	add $t6, $t6, $s3
	li $s3, 1
	sw $s3, 0($t6)
	move $t6, $s1
	addi $s1, $s1, 1
	move $t6, $t0
	mul $s3, $s1, 4
	add $t6, $t6, $s3
	sw $s2, 0($t6)
	move $t6, $t1
	mul $s3, $s2, 4
	add $t6, $t6, $s3
	sw $s0, 0($t6)
	bne $s1, $t4, L30
	li $t5, 1
L30:
	move $t6, $s2
	addi $s2, $s2, 1
	j L25
L26:
	j L21
L22:
	move $v0, $t5
	j L18
	sw $t7, 32($gp)
	sw $s1, 36($gp)
	sw $s0, 24($gp)
	sw $s0, 24($gp)
	sw $t7, 32($gp)
	sw $s0, 24($gp)
	sw $s2, 28($gp)
	sw $s1, 36($gp)
	sw $s2, 28($gp)
L18:
	lw $t0, 180($sp)
	lw $t1, 184($sp)
	lw $t2, 188($sp)
	lw $t3, 192($sp)
	lw $t4, 196($sp)
	lw $t5, 200($sp)
	lw $t6, 204($sp)
	lw $t7, 208($sp)
	lw $s0, 212($sp)
	lw $s1, 216($sp)
	lw $s2, 220($sp)
	lw $s3, 224($sp)
	lw $s4, 228($sp)
	addiu $sp, $sp, 256
	lw $ra, -4($sp)
	jr $ra
L31_improve:
	sw $ra, -4($sp)
	addiu $sp, $sp, -160
	sw $t0, 84($sp)
	sw $t1, 88($sp)
	sw $t2, 92($sp)
	sw $t3, 96($sp)
	sw $t4, 100($sp)
	sw $t5, 104($sp)
	sw $t6, 108($sp)
	sw $t7, 112($sp)
	move $t3, $a0
	lw $t3, 28($gp)
	lw $t0, 16($gp)
	lw $t1, 8($gp)
	lw $t2, 0($gp)
	lw $t4, 24($gp)
	move $t4, $t3
	move $t3, $t1
	addi $t1, $t1, 1
L33:
	move $t5, $t0
	mul $t6, $t4, 4
	add $t7, $t5, $t6
	lw $t5, 0($t7)
	blez $t5, L34
	move $t5, $t0
	mul $t6, $t4, 4
	add $t7, $t5, $t6
	lw $t5, 0($t7)
	move $t3, $t5
	move $t1, $t2
	mul $t5, $t3, 4
	add $t6, $t1, $t5
	lw $t1, 0($t6)
	mul $t5, $t4, 4
	add $t6, $t1, $t5
	lw $t1, 0($t6)
	lw $t5, 0($t1)
	sub $t5, $t5, 1
	sw $t5, 0($t1)
	move $t1, $t2
	mul $t5, $t4, 4
	add $t6, $t1, $t5
	lw $t1, 0($t6)
	mul $t5, $t3, 4
	add $t6, $t1, $t5
	lw $t1, 0($t6)
	lw $t5, 0($t1)
	addi $t5, $t5, 1
	sw $t5, 0($t1)
	move $t4, $t3
	j L33
L34:
	li $v0, 0
	j L32
	sw $t4, 24($gp)
	sw $t1, 8($gp)
	sw $t3, 28($gp)
	sw $t4, 24($gp)
L32:
	lw $t0, 84($sp)
	lw $t1, 88($sp)
	lw $t2, 92($sp)
	lw $t3, 96($sp)
	lw $t4, 100($sp)
	lw $t5, 104($sp)
	lw $t6, 108($sp)
	lw $t7, 112($sp)
	addiu $sp, $sp, 160
	lw $ra, -4($sp)
	jr $ra
cmain:
	sw $ra, -4($sp)
	addiu $sp, $sp, -116
	sw $t0, 40($sp)
	sw $t1, 44($sp)
	sw $t2, 48($sp)
	sw $t3, 52($sp)
	sw $t4, 56($sp)
	lw $t0, 8($gp)
	li $t1, 0
	li $t1, 99
	li $t2, 100
	li $t3, 0
	move $a0, $t1
	move $a1, $t2
	jal L7_build
	move $t4, $v0
L37:
	move $a0, $t2
	move $a1, $t1
	move $a2, $t3
	jal L17_find
	move $t4, $v0
	blez $t4, L38
	move $a0, $t2
	jal L31_improve
	move $t4, $v0
	j L37
L38:
	la $t1, L39
	move $a0, $t1
	move $a1, $t0
	jal printf
	li $v0, 0
	j L36
L36:
	lw $t0, 40($sp)
	lw $t1, 44($sp)
	lw $t2, 48($sp)
	lw $t3, 52($sp)
	lw $t4, 56($sp)
	addiu $sp, $sp, 116
	lw $ra, -4($sp)
	jr $ra
malloc:
	li $v0, 9
	syscall
	jr $ra
	

.text
.globl printf
printf:
subu $sp, $sp, 44 # set up the stack frame,
sw $ra, 32($sp) # saving the local environment.
sw $fp, 28($sp)
sw $s0, 24($sp)
sw $s1, 20($sp)
sw $s2, 16($sp)
sw $s3, 12($sp)
sw $s4, 8($sp)
sw $s5, 4($sp)
sw $s6, 0($sp)
sw $s7, 36($sp)
sw $s8, 40($sp)
addu $fp, $sp, 44

# grab the arguments:
move $s0, $a0 # fmt string
move $s1, $a1 # arg1 (optional)
move $s2, $a2 # arg2 (optional)
move $s3, $a3 # arg3 (optional)
lw $s8, 36($sp)

li $s4, 0 # set # of formats = 0
la $s6, printf_buf # set s6 = base of printf buffer.

printf_loop: # process each character in the fmt:
lb $s5, 0($s0) # get the next character, and then
addu $s0, $s0, 1 # bump up $s0 to the next character.

beq $s5, '%', printf_fmt # if the fmt character, then do fmt.
beq $0, $s5, printf_end # if zero, then go to end.

printf_putc:
sb $s5, 0($s6) # otherwise, just put this char
sb $0, 1($s6) # into the printf buffer,
move $a0, $s6 # and then print it with the
li $v0, 4 # print_str syscall
syscall

b printf_loop # loop on.

printf_fmt:
lb $s5, 0($s0) # see what the fmt character is,
addu $s0, $s0, 1 # and bump up the pointer.

beq $s4, 4, printf_loop # if we've already processed 4 args,
# then *ignore* this fmt.
beq $s5, 'd', printf_int # if 'd', print as a decimal integer.
beq $s5, 's', printf_str # if 's', print as a string.
beq $s5, 'c', printf_char # if 'c', print as a ASCII char.
beq $s5, '0', printf_prefix # if '0', print as a '0'-prefix dectimal integer.
beq $s5, '%', printf_perc # if '%', print a '%'
b printf_loop # otherwise, just continue.

printf_shift_args: # shift over the fmt args,
move $s1, $s2 # $s1 = $s2
move $s2, $s3 # $s2 = $s3
move $s3, $s8 # $s3 = $s8

add $s4, $s4, 1 # increment # of args processed.

b printf_loop # and continue the main loop.

printf_prefix: # deal with a %0
lb $s5, 0($s0)
add $s0, $s0, 1
li $s7, 1
printf_prefix_loop_1:
mul $s7, $s7, 10
sub $s5, $s5, 1
bgt $s5, '1', printf_prefix_loop_1
printf_prefix_loop_2:
move $a0, $s1
div $a0, $a0, $s7
rem $a0, $a0, 10
li $v0, 1
syscall
div $s7, $s7, 10
bge $s7, 1, printf_prefix_loop_2
lb $s5, 0($s0)
addu $s0, $s0, 1
b printf_shift_args # branch to printf_shift_args


printf_int: # deal with a %d:
move $a0, $s1 # do a print_int syscall of $s1.
li $v0, 1
syscall
b printf_shift_args # branch to printf_shift_args

printf_str: # deal with a %s:
move $a0, $s1 # do a print_string syscall of $s1.
li $v0, 4
syscall
b printf_shift_args # branch to printf_shift_args

printf_char: # deal with a %c:
sb $s1, 0($s6) # fill the buffer in with byte $s1,
sb $0, 1($s6) # and then a null.
move $a0, $s6 # and then do a print_str syscall
li $v0, 4 # on the buffer.
syscall
b printf_shift_args # branch to printf_shift_args

printf_perc: # deal with a %%:
li $s5, '%' # (this is redundant)
sb $s5, 0($s6) # fill the buffer in with byte %,
sb $0, 1($s6) # and then a null.
move $a0, $s6 # and then do a print_str syscall
li $v0, 4 # on the buffer.
syscall
b printf_loop # branch to printf_loop

printf_end:
lw $ra, 32($sp) # restore the prior environment:
lw $fp, 28($sp)
lw $s0, 24($sp)
lw $s1, 20($sp)
lw $s2, 16($sp)
lw $s3, 12($sp)
lw $s4, 8($sp)
lw $s5, 4($sp)
lw $s6, 0($sp)
lw $s7, 36($sp)
lw $s8, 40($sp)
addu $sp, $sp, 44 # release the stack frame.
jr $ra # return.

.data
printf_buf: .space 2

## end of printf.asm
